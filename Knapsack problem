#!/bin/python3

import math
import os
import random
import re
import sys



def unboundedKnapsack(k, arr):
    dp = [False] * (k + 1)
    dp[0] = True
    
    for x in arr:
        for j in range(x, k + 1):
            if dp[j - x]:
                dp[j] = True
    
    for i in range(k, -1, -1):
        if dp[i]:
            return i

def main():
    import sys
    input = sys.stdin.read
    data = input().split()
    
    idx = 0
    t = int(data[idx])
    idx += 1
    
    results = []
    for _ in range(t):
        n = int(data[idx])
        k = int(data[idx + 1])
        idx += 2
        arr = list(map(int, data[idx:idx + n]))
        idx += n
        
        result = unboundedKnapsack(k, arr)
        results.append(result)
    
    for res in results:
        print(res)

# Example to run the function with sample input
if __name__ == "__main__":
    main()

    
 
